@import '../../../styles.scss';

.home {
    display: flex;
    flex-direction: column;
    width: 100%;
    overflow: hidden; /* Prevent entire page from scrolling */
    position: relative;
}

.top-bar {
    padding: 20px 0 0 3em;
    box-sizing: border-box;

    h1 {
        font-size: 2.3rem;
        font-weight: bold;
        margin: 1;
        color: var(--standard-text-color);
    }
}

.grocery-container {
    display: flex;
    padding: 0 3em;
}

.sidebar {
    width: 23vw;
    height: calc(100vh - 30px - 220px); /* Make the sidebar take the full height minus the top bar */
    padding: 20px;
    background-color: var(--light-gray);
    border-radius: 8px;
    overflow-y: auto; /* Make the sidebar scrollable */
    position: relative;

    .list-container {
        display: flex;
        gap: 8px;
        margin-bottom: 16px;
    }

    .list-container input {
        height: 40px;
        width: 90%;
        flex-grow: 1;
        padding: 0 15px;
    }

    .list-container button {
        flex-shrink: 0;
        display: flex; /* Center the icon */
        align-items: center;
        justify-content: center;
    }

    button {
        width: 15%;
        height: 40px;
        padding: 0.5em;
        margin-bottom: 1em;
        background-color: #d84202;
        color: white;
        border-radius: 8px;
        border: none;
        cursor: pointer;
        transition: all 0.2s ease;

        &:hover {
            background-color: #c63a01;
        }
    }

    .list-names {
      padding: 0;
      list-style: none;
    
      li {
        display: flex;
        justify-content: space-between;
        align-items: center; /* Ensures all content in the list item is vertically aligned */
        padding: 0.5em 1em;
        cursor: pointer;
        background-color: #cacaca;
        border-radius: 8px;
        margin-bottom: 0.5em;
        transition: all 0.3s ease;
    
        &.selected {
          background-color: rgba(221, 171, 111, 0.805);
          font-weight: bold;
        }
    
        &:hover {
          filter: brightness(0.9);
        }
      }
    
      .grid1 {
        display: flex;
        flex-direction: column;
        justify-content: center; /* Ensures the text block is vertically centered */
        gap: 0.2em;
        color: #333;
    
        h2, h4 {
          margin: 0; /* Remove default margins */
        }
    
        h2 {
          font-size: 1.25em;
        }
    
        h4 {
          padding-top: 10px;
          font-weight: 500;
          font-size: 0.85em;
        }
      }
    
      .delete-list {
        margin-top: -18px;
        display: flex;
        align-items: center; /* Ensures the icon is vertically centered within the button */
        justify-content: center;
        background: none;
        border: none;
        cursor: pointer;
        font-size: 1.5rem; /* Adjust size of the delete icon */
        color: var(--primary-color);
        border-radius: 50%; /* Optional: circular button */
        padding: 0; /* Remove extra padding for better alignment */
        width: 32px; /* Fixed width for better alignment */
        height: 32px; /* Fixed height for better alignment */
        transition: background-color 0.3s ease;
    
        &:hover {
          background-color: rgba(0, 0, 0, 0.1); /* Subtle hover effect */
        }
      }
    }
  }    

.main-content {
    flex-grow: 1;
    padding: 2em 3em;
    background-color: rgba(221, 171, 111, 0.805);
    border-radius: 8px;
    margin: 0em 2em;
    color: #333;
    overflow-y: auto; /* Make the main content scrollable */
    height: calc(100vh - 30px - 245px); /* Make the main content take the full height minus the top bar */

    h2 {
        margin-top: 0;
        font-size: 1.8em;
    }

    ul.items-list {
      padding-inline-start: 0; 
    }

    li {
      display: flex;
      align-items: center;
      margin-bottom: 0.5em;
      font-size: 1.15em;
      overflow-wrap: normal;
    
      .list-buttons {
        display: flex; /* Flexbox to lay buttons side by side */
        gap: 8px; /* Spacing between buttons */
        margin-left: auto; /* Push the buttons to the far right */
        position: relative; /* Ensure the buttons are positioned relative to the list item */
    
        button {
          display: flex; /* Flexbox for centering the icon */
          justify-content: center;
          align-items: center;
          width: 35px; /* Fixed width for circular shape */
          height: 35px; /* Fixed height for circular shape */
          background: none;
          border: none;
          cursor: pointer;
          font-size: 1.5rem; /* Adjust size of the delete icon */
          color: var(--primary-color);
          border-radius: 50%; /* Circular shape */
          transition: background-color 0.3s ease;
          z-index: 1; /* Ensure the buttons are on top of the list item */
    
          &:hover {
            background-color: rgba(0, 0, 0, 0.1); /* Subtle hover effect */
          }
        }
      }

      input[type="text"] {
        font-size: 1em !important;
        padding: 0.25em 0.5em;
        border: 1px solid #ccc;
        border-radius: 4px;
        margin-left: 10px;
        width: 60%;
      }
    }

    button {
        padding: 0.25em;
        background-color: #d84202;
        color: white;
        border: none;
        cursor: pointer;
        border-radius: 8px;
    }
}

/* Custom checkbox styling */
input[type="checkbox"] {
    vertical-align: top;
    margin-left: 0px;
    margin-right: 20px;
    appearance: none;
    width: 25px;
    height: 25px;
    border: 2px solid rgb(110, 110, 110);
    border-radius: 4px;
    cursor: pointer;
    outline: none;
    transition: background-color 0.2s ease, border-color 0.2s ease;
    position: relative;
}

/* Checkbox appearance when checked */
input[type="checkbox"]:checked {
    background-color: var(--primary-color);
    border-color: var(--primary-color);
}

input[type="checkbox"]:hover {
    border-color: var(--primary-color);
}

/* Checkmark styling inside the checkbox */
input[type="checkbox"]:checked::before {
    content: "âœ“";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    font-size: 19px;
}

/* Ingredient text styling when checkbox is checked */
input[type="checkbox"]:checked + .ingredient-text {
    text-decoration: line-through;
    color: #aaa;
}

/* Style the input boxes */
input[type="text"], input[type="number"], input[type="email"], input[type="password"] {
  font-size: 18px; /* Increases font size for readability */
  border-radius: 8px; /* Rounds the corners for a smoother look */
  border: 2px solid var(--standard-lightish-text-color); /* Light gray border */
  background-color: var(--inputbox-bg-color); /* Soft background color */
  color: var(--standard-text-color); /* Dark text color for good contrast */
  transition: border-color 0.3s, box-shadow 0.3s; /* Smooth transitions */
  box-sizing: border-box; /* Ensures padding and borders are included in width calculation */
}

/* Focus state for inputs */
input[type="text"]:focus, input[type="number"]:focus, input[type="email"]:focus, input[type="password"]:focus {
  border-color: var(--primary-color); /* Blue border when focused */
  outline: none; /* Removes the default focus outline */
}

/* Style for placeholder text */
input::placeholder {
  color: rgb(110, 110, 110); /* Light gray color for placeholder text */
  font-style: italic; /* Italicize the placeholder text */
}

::ng-deep .mat-dialog-container {
  background-color: var(--bg-color) !important;
  color: var(--standard-text-color) !important;
  border-radius: 8px;
  padding: 20px;
}

::ng-deep .mat-dialog-title {
  font-size: 24px;
  font-weight: bold;
  margin-bottom: 10px;
}

::ng-deep .mat-dialog-content {
  font-size: 16px;
  margin-bottom: 20px;
}

::ng-deep .mat-dialog-actions {
  display: flex;
  justify-content: flex-end;
}

::ng-deep .mat-dialog-actions button {
  color: var(--primary-color) !important;
  margin-left: 10px;
}

::ng-deep .mat-dialog-actions button:hover {
  background-color: rgba(var(--primary-color-rgb), 0.1) !important;
}
.new-item {
  display: flex; /* Use flexbox to align input and button */
  align-items: center; /* Center vertically */
  gap: 10px; /* Add space between input and button */
  width: 100%; /* Make the container fill its parent width */
}

.new-item input {
  flex-grow: 1; /* Make the input take all available space */
  font-size: 16px;
  border: none; /* Remove all borders */
  border-radius: 0;
  border-bottom: 2px solid rgb(110, 110, 110); /* Add black underline */
  background: transparent; /* Transparent background */
  color: black; /* Black text color */
  padding: 10px 10px; /* Add padding for better usability */
  box-sizing: border-box;
  font-size: 1em;

  &:focus {
    outline: none; /* Remove the default focus outline */
    border-bottom: 2px solid black; /* Highlight underline on focus */
  }
}

.new-item button {
  display: flex; /* Center the plus icon */
  align-items: center;
  justify-content: center;
  width: 40px; /* Circular button width */
  height: 40px; /* Circular button height */
  background-color: transparent;
  border: 2px solid rgb(110, 110, 110); 
  color: rgb(110, 110, 110); /* plus icon color */
  border-radius: 50%; /* Perfect circle */
  cursor: pointer;
  transition: all 0.3s ease;

  &:hover {
    border: 2px solid black; 
    background-color: black; /* Slightly lighter black on hover */
    color: white;
  }
}

.spinner-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

::ng-deep mat-spinner circle {
  stroke: var(--primary-color) !important;
}


.message-box {
  position: fixed;
  top: 15%;
  left: 50%;
  transform: translateX(-50%);
  background-color: $DARK_PRIMARY_COLOR;
  color: #fff;
  padding: 10px 20px;
  border-radius: 5px;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  z-index: 1000;
  animation: fade-in-out 3s ease-in-out;
}

@keyframes fade-in-out {
  0% { opacity: 0; transform: translateY(10px); }
  10%, 90% { opacity: 1; transform: translateY(0); }
  100% { opacity: 0; transform: translateY(10px); }
}
